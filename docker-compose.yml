version: "3.8"

services:
  web:
    build: .
    restart: always
    volumes:
      - .:/code
    ports:
      - "8001:8001"
    depends_on:
      - db
      - rabbitmq
      - celery_worker
    networks:
      - django_network
    env_file:
      - .env

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - django_network
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - django_network
    env_file:
      - .env

  celery_worker:
    build: .
    restart: always
    command: celery -A conf worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    networks:
      - django_network
    env_file:
      - .env

  celery_beat:
    build: .
    restart: always
    command: celery -A conf beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    networks:
      - django_network
    env_file:
      - .env

volumes:
  pg_data:

networks:
  django_network:
    driver: bridge
